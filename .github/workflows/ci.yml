# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest #[self-hosted, ubuntu, ec2]
    defaults:
      run:
        shell: bash
        working-directory: ./

    strategy:
      matrix:
        node-version: [23.x]
      # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        path: main
    
    - name: Generate hash for tag
      run: echo "SHORT_SHA=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ vars.DOCKER_EMAIL }}
        password: ${{ secrets.DOCKER_TOKEN }}

    - name: Build and push frontend Docker images
      working-directory: ./main/moviebuddy_frontend
      run: |
        docker build . -t ${{ vars.DOCKER_USERNAME }}/moviebuddy-frontend:latest --platform linux/amd64
        docker push james0720/moviebuddy-frontend
    
    - name: Build and push backend Docker images
      working-directory: ./main/backend
      run: |
        docker build . -t ${{ vars.DOCKER_USERNAME }}/moviebuddy-backend:latest --platform linux/amd64
        docker push ${{ vars.DOCKER_USERNAME }}/moviebuddy-backend
    
    # - uses: actions/checkout@v4
    # - name: Use Node.js ${{ matrix.node-version }}
    #   uses: actions/setup-node@v4
    #   with:
    #     node-version: ${{ matrix.node-version }}
    #     cache: 'npm'
    #     cache-dependency-path: './moviebuddy_frontend/package-lock.json'
    # - name: Build the artifact
    #   run: |
    #     npm ci
    #     npm run build
          

